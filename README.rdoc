Getting Started

Step 1:
Install innowhite gem with RubyGems

gem install innowhite
or add this to your Gemfile if you use Bundler:
gem "innowhite"

Step 2:
Place the innowhite.yml file in the config directory.
This file will be sent to you by email.


In the code :
we need to initialize the Innowhite class
innowhite = Innowhite.new


Available Command Requests
Then we could access the available methods from the instance :

Create new session :
  Create new room and get its room url to access it.

  Arguments (as a Hash) : 
  a. :user => the name of the moderator (ex. "John")
  b. :tags => (optional). Example : (math 101, calculus, integration)
  c. :desc => (optional) Description of the room. (ex: Definite Integrals by John)	

  Request Command :
  innowhite.create_room({}). Ex : innowhite.create_room({:user => "bainur", :tags => "testing, room testing", :desc => "This is only testing for the room"})

  Return value :
  a. Room Id
  b. URL  (this URL will be passed to user so that he needs to be redirected to open in new page.)




Join an existing session
  Joining the existing room and get its room url to access it.

  Arguments :
  a. room_id => (mandatory) The room id which want to join.
  b. username => (mandatory) Username of the user who want to join the room.

  Request Command :
    innowhite.join_meeting(room_id, username). Ex : innowhite.join_meeting(12345, "bainur")
  
   Return value :
  a. URL  (this URL will be passed to the user, the user needs to be redirected to open in new page.)   
   




Get the live sessions
  Get the list of existing sessions.

  Arguments (as a Hash) :
  a. :tags (optional)
  b. :user (optional)

  Request Command :
    innowhite.get_sessions({})

  Return value :
  a. RoomId
  b. Room Description
  c. All tags associated with this room.
  d. Room Created by.
  e. Room start time.





Schedule a session :
  Scheduling new session.
  
  Arguments (as a Hash) :
  a. :tags   (optional) 
  b. :startTime (format should be in seconds)
  c. :timeZone (GMT time zone )  (ex : +1, +2) 
  d. :endTime (format should be in seconds)
  e. :user
  f. :description
  
  Request Command :
    innowhite.schedule_meeting({})

  Return Value :
  a. True or False







Get the past sessions
  Get the list of past sessions.

  Arguments (as a Hash) :
  a. :tags (optional)
  b. :user (optional)

  Request Command :
    innowhite.past_sessions({})
  

  Return Value :
  a. tags   (optional)
  b. orgName  (optional)
  c. Moderator Name
  d. Room Description
  e. Link to play the video.




Get the scheduled sessions
  Get the list of scheduled sessions.

  Arguments (as a Hash) :
  a. :tags (optional)
  b. :user (optional)

  Request Command :
    innowhite.get_scheduled_list({})

  Return Value:
  a. Tags   (optional)
  b. orgName  (optional)
  c. Start time (format should be in seconds)
  d. Time zone (GMT time zone )  (ex : +1, +2)
  e. End time (format should be in seconds)
  f. Room Description
  g. Moderator name


Cancel scheduled session
  Cancel the scheduled session.

  Arguments :
  a. room_id (mandatory)

  Request Command :
    innowhite.cancel_meeting(room_id)

  Return Value:
  a. True or False



Update a scheduled session :
  Updating the exist scheduled session.
  
  Arguments (as a Hash) :
  a. :room_id   (mandatory)
  b. :startTime (format should be in milliseconds)  (optional)
  c. :timeZone (optional)
  d. :endTime (format should be in milliseconds) (optional)
  e. :description (optional)
  f. :tags (optional)
  
  Request Command :
    innowhite.update_schedule({})

  Return Value :
  a. True or False



Get Meeting Play back Recording URL :
  Returns the video playback URL.

  a.  :room_id  (mandatory)
 
  Request Command :
    innowhite.getRecordingURL({})

  Return Value :
  a. URL
